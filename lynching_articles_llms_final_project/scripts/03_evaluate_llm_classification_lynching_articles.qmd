---
title: "final_final_project"
---

```{r}

###
# Step 01 Load libraries +
# Edit .Renviron file to add API Keys
# Restart R after editing .Renviron files
###
source("r_scripts/03_01_r_environment_setup.R")

###
# Step 02 Define model list
###
source("r_scripts/03_02_r_provider_model_list.R")

###
# Step 03 Define system prompt to send with each article
###

source("r_scripts/03_03_r_system_prompt.R")

###
# Load function to classify articles
###
source("r_scripts/03_04_r_classify_articles.R")

###
# Load function to combine and evaluate responses
###

source("r_scripts/03_05_r_evaluate_responses.R")

###
# Load function to correct malformed json with llm
###

source("r_scripts/03_06_r_check_and_correct_json.R")

###
# Load function to correct malformed json with llm
###

source("r_scripts/03_07_r_evaluate_model_accuracy.R")

###
# Load test data
###
test_data <- read_rds("../data/input_data/03_test_data.rds")

```

```{r eval=FALSE}

###
# Classify articles
###

###
# Run function for all articles in parallel
###

# Set up parallel processing
workers <- parallel::detectCores() - 1
future::plan(future::multisession, workers = workers)

# Run classification in parallel
future_map(
  provider_model_type_list,
  classify_articles,
  system_prompt = system_prompt_value,
  test_set_articles_df = test_data,
  sample_size = nrow(test_data),
  overwrite = FALSE,
  .progress = TRUE
)

###
# Function to classify articles
###

##
# For testing, run function for a single model
##
classify_articles(
 model_provider_type = "gemini_gemini-exp-1114",
 system_prompt = system_prompt_value,
 test_set_articles_df = test_data,
 sample_size = nrow(test_data),
 overwrite = FALSE
)
```

```{r}
###
# Parse model responses
###

responses <- combine_responses_validate_json("../data/output_data/llm_responses") %>%
  filter(!str_detect(model_type,"1114"))

###
# Check for completeness
###

response_check <- get_model_completeness_status()[[2]]
  
###
# Check and correct malformed json
###

output_dir <- correct_malformed_json_with_llm(responses, n_workers = 10)


###
# Combine all results
###

x <- create_model_accuracty_stats(output_dir)

x$specific_class_counts

x$specific_class_predicted_v_actual

x$specific_lynching_event_predicted_v_actual  

# https://docs.google.com/document/d/1BFgzy3yK-rAcj1StJPnnM8se7GLp0uC0qCJJe9ojXEY/edit?tab=t.0

```

